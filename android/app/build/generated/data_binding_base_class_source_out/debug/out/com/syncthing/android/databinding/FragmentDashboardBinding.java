// Generated by view binder compiler. Do not edit!
package com.syncthing.android.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.syncthing.android.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentDashboardBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final TextView textConnections;

  @NonNull
  public final TextView textDeviceStats;

  @NonNull
  public final TextView textEvents;

  @NonNull
  public final TextView textFolderStats;

  @NonNull
  public final TextView textSystemStatus;

  private FragmentDashboardBinding(@NonNull ScrollView rootView, @NonNull TextView textConnections,
      @NonNull TextView textDeviceStats, @NonNull TextView textEvents,
      @NonNull TextView textFolderStats, @NonNull TextView textSystemStatus) {
    this.rootView = rootView;
    this.textConnections = textConnections;
    this.textDeviceStats = textDeviceStats;
    this.textEvents = textEvents;
    this.textFolderStats = textFolderStats;
    this.textSystemStatus = textSystemStatus;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentDashboardBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_dashboard, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentDashboardBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.text_connections;
      TextView textConnections = ViewBindings.findChildViewById(rootView, id);
      if (textConnections == null) {
        break missingId;
      }

      id = R.id.text_device_stats;
      TextView textDeviceStats = ViewBindings.findChildViewById(rootView, id);
      if (textDeviceStats == null) {
        break missingId;
      }

      id = R.id.text_events;
      TextView textEvents = ViewBindings.findChildViewById(rootView, id);
      if (textEvents == null) {
        break missingId;
      }

      id = R.id.text_folder_stats;
      TextView textFolderStats = ViewBindings.findChildViewById(rootView, id);
      if (textFolderStats == null) {
        break missingId;
      }

      id = R.id.text_system_status;
      TextView textSystemStatus = ViewBindings.findChildViewById(rootView, id);
      if (textSystemStatus == null) {
        break missingId;
      }

      return new FragmentDashboardBinding((ScrollView) rootView, textConnections, textDeviceStats,
          textEvents, textFolderStats, textSystemStatus);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
